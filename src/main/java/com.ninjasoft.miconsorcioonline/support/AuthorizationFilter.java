package com.ninjasoft.miconsorcioonline.support;import java.util.logging.Logger;import java.io.IOException;import com.google.appengine.api.log.*;import javax.servlet.*;import javax.servlet.http.*;import com.google.appengine.api.users.User;import com.google.appengine.api.users.UserService;import com.google.appengine.api.users.UserServiceFactory;public class AuthorizationFilter implements Filter{    private static final Logger log = Logger.getLogger(AuthorizationFilter.class.getName());     private String urlIgnoreRegexPattern;    public void init(FilterConfig config) {        urlIgnoreRegexPattern = config.getInitParameter("urlIgnoreRegexPattern");    }    @Override      public void destroy() {        urlIgnoreRegexPattern = null;    }     @Override    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException {        HttpServletRequest request = (HttpServletRequest) req;        HttpServletResponse response = (HttpServletResponse) res;        String requestUri = request.getRequestURI();        if (! requestUri.matches(this.urlIgnoreRegexPattern)) {            log.info(String.format("Invoking Authorization Filter for: %s", requestUri));            UserService userService = UserServiceFactory.getUserService();            User user = userService.getCurrentUser();            if (user == null) {                response.sendRedirect(userService.createLoginURL(requestUri));                log.warning("Current user not authenticated. Redirecting to login page...");            }            else                log.info(String.format("Current user:", user));        }        chain.doFilter(req, res);    }}